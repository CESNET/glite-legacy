# Default values
top_srcdir=.
builddir=build
top_builddir=${top_srcdir}/${builddir}
stagedir=.
distdir=.
globalprefix=glite
lbprefix=lb
package=glite-lb-client-interface
version=0.0.0
PREFIX=/opt/glite

-include Makefile.inc
-include ../project/version.properties

version=${module.version}

SUFFIXES = .T

VPATH=${top_srcdir}/interface
AT3=perl -I${top_srcdir}/project ${top_srcdir}/project/at3

T_DEST=${PREFIX}/share/${lbprefix}/at3

STAGETO=include/${globalprefix}/${lbprefix}
STATIC_H=consumer.h context.h dump.h load.h notification.h notifid.h purge.h \
	Notification.h CountRef.h Job.h LoggingExceptions.h ServerConnection.h \
	statistics.h padstruct.h
FAKE_H=consumer_fake.h producer_fake.h
GEN_H=events.h jobstat.h producer.h Event.h JobStatus.h interface_version.h


generate: ${GEN_H}

all compile: generate

check: 
	@echo No unit test required for interface-only module.

%.h: %.h.T
	rm -f $@
	${AT3} $< >$@ || rm -f $@
	chmod -w $@ >/dev/null

interface_version.h: ${top_srcdir}/project/version.properties
	echo "#define GLITE_LB_CLIENT_INTERFACE \"${version}\"" >$@ 

ifdef LB_STANDALONE
stage: generate
else
stage: generate doc
endif
	$(MAKE) install PREFIX=${stagedir} DOSTAGE=yes

dist: distsrc distbin

distsrc:
	mkdir -p ${top_srcdir}/${package}-${version}
	cd ${top_srcdir} && GLOBIGNORE="${package}-${version}" && cp -Rf * ${package}-${version}
	cd ${top_srcdir} && tar -czf ${distdir}/${package}-${version}_src.tar.gz --exclude-from=project/tar_exclude ${package}-${version}
	rm -rf ${top_srcdir}/${package}-${version}

distbin:
	$(MAKE) install PREFIX=${top_srcdir}/tmpbuilddir
	cd ${top_srcdir}/tmpbuilddir && tar -czf ${top_srcdir}/${distdir}/${package}-${version}_bin.tar.gz *
	rm -rf ${top_srcdir}/tmpbuilddir
	
doc: generate 
	cp ${top_srcdir}/doc/*.dox .
	echo "PROJECT_NUMBER = ${version}" >> C.dox
	echo "PROJECT_NUMBER = ${version}" >> CPP.dox
	doxygen C.dox
	doxygen CPP.dox

ifdef LB_STANDALONE
install: generate
else
install: generate doc
endif
	-mkdir -p ${PREFIX}/${STAGETO}
	-mkdir -p ${PREFIX}/share/doc/${package}-${version}
	-mkdir -p ${T_DEST}
	install -m 644 ${GEN_H} ${PREFIX}/${STAGETO}
	install -m 644 ${top_srcdir}/LICENSE ${PREFIX}/share/doc/${package}-${version}
	cd ${top_srcdir}/interface && install -m 644 ${STATIC_H} ${PREFIX}/${STAGETO}
ifndef LB_STANDALONE
	cp -r C CPP ${PREFIX}/share/doc/${package}-${version}
#	cp -r ${top_srcdir}/doc/api/{Makefile,api.tex,fig} ${PREFIX}/share/doc/${package}-${version}/api
endif
	if [ x${DOSTAGE} = xyes ]; then \
		cd ${top_srcdir}/interface && install -m 644 ${FAKE_H} ${PREFIX}/${STAGETO} ; \
	fi
	install -m 644 ${top_srcdir}/src/EventAttrNames.pl ${T_DEST}
	install -m 644 ${top_srcdir}/src/StatusAttrNames.pl ${T_DEST}

clean:
	rm -rf *.h *.dox C/ CPP/
	
